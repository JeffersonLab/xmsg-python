// Google's protocol-buffer definition of the xMsg data class
// author: gurjyan
// date: 10.06.14

option optimize_for = SPEED;

message Data {

    // communication id, used to genetically relate messages
    optional fixed32 id = 1;

    // author of the data
    optional string author = 2;

    // data itself
    optional sint32 VLSINT32 = 3; // variable length signed int32
    optional sint64 VLSINT64 = 4; // variable length signed int64
    optional sfixed32 FLSINT32 = 5; // fixed length signed int32
    optional sfixed64 FLSINT64 = 6; // fixed length signed int64
    optional float FLOAT = 7;
    optional double DOUBLE = 8;
    optional string STRING = 9; // contains UTF-8 encoding or 7-bit ASCII text
    optional bytes BYTES = 10; // contains arbitrary sequence of bytes

    repeated sint32 VLSINT32A = 11; // array of variable length signed int32s
    repeated sint64 VLSINT64A = 12; // array of variable length signed int64s
    repeated sfixed32 FLSINT32A = 13; // array of fixed length signed int32s
    repeated sfixed64 FLSINT64A = 14; // array of fixed length signed int64s
    repeated float FLOATA = 15; // array of floats
    repeated double DOUBLEA = 16; // array of doubles
    repeated string STRINGA = 17; // array of UTF-8 encoded or 7-bit ASCII strings
    repeated bytes BYTESA = 18; // array of arbitrary sequence of bytes

    // data type. if set to DataTpe.PAYLOAD access data using the "payload"
    // filed, otherwise "data: filed
    optional DataType xtype = 19;

    // byte ordering in case data type is BYTES/BYTESA
    optional string byteOrder = 20;

    // data textual description
    optional string dataDescription = 21;

    // data type enumeration
    enum DataType {
        T_VLSINT32 = 1;   // variable length signed int32
        T_VLSINT64 = 2;   // variable length signed int64
        T_FLSINT32 = 3;   // fixed length signed int32
        T_FLSINT64 = 4;   // fixed length signed int64
        T_FLOAT = 5;
        T_DOUBLE = 6;
        T_STRING = 7;     // contains UTF-8 encoding or 7-bit ASCII text
        T_BYTES = 8;      // contains arbitrary sequence of bytes

        T_VLSINT32A = 9;  // array of variable length signed int32s
        T_VLSINT64A = 10; // array of variable length signed int64s
        T_FLSINT32A = 11; // array of fixed length signed int32s
        T_FLSINT64A = 12; // array of fixed length signed int64s
        T_FLOATA = 13;    // array of floats
        T_DOUBLEA = 14;   // array of doubles
        T_STRINGA = 15;   // array of UTF-8 encoded or 7-bit ASCII strings
        T_BYTESA = 16;    // array of arbitrary sequence of bytes

        T_PAYLOAD = 17;    // payload data type
    }
}

// Payload class
message Payload {

    message Item {
        required string name =1; // payload name
        required Data data =2; // data
    }

    repeated Item item = 1;
 }


